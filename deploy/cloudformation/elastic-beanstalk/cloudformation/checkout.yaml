AWSTemplateFormatVersion: 2010-09-09
Description: Watchn Checkout service Elastic Beanstalk application

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VpcId:
    Description: VPC ID
    Type: 'AWS::EC2::VPC::Id'

  PrivateSubnetIds:
    Description: Private Subnet IDs
    Type: String

  DatabaseSubnetIds:
    Description: Database Subnet IDs
    Type: String

  HostedZone:
    Description: Private hosted zone for DNS
    Type: String

  OrdersEndpoint:
    Description: Orders service endpoint
    Type: String

  ServiceRoleArn:
    Description: Elastic Beanstalk Service Role ARN
    Type: String

Resources:
  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Sub '${EnvironmentName}-checkout'
      Description: Watchn Checkout service

  Version:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref Application
      SourceBundle: ../packages/checkout.zip

  Environment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref Application
      EnvironmentName: watchn-checkout
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: AWS_REGION
          Value: !Ref AWS::Region
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: REDIS_URL
          Value: !Sub 'redis://${ElasticacheCluster.RedisEndpoint.Address}:${ElasticacheCluster.RedisEndpoint.Port}' 
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: ENDPOINTS_ORDERS
          Value: !Ref OrdersEndpoint
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref InstanceSecurityGroup
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VpcId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Ref PrivateSubnetIds
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !Ref PrivateSubnetIds
        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: internal
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref ServiceRoleArn
      PlatformArn: !Sub 'arn:aws:elasticbeanstalk:${AWS::Region}::platform/Node.js 12 running on 64bit Amazon Linux 2/5.2.2'
      VersionLabel: !Ref Version

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Role

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      Path: /

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : !Ref HostedZone
      Name: checkout.watchn.local
      ResourceRecords:
      - !GetAtt Environment.EndpointURL
      TTL: '30'
      Type: CNAME

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${EnvironmentName}-checkout-sg'
      GroupDescription: Marker security group for Checkout service
      VpcId: !Ref VpcId

  ElasticacheCluster:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      AutoMinorVersionUpgrade: 'true'
      Engine: redis
      EngineVersion: "5.0.6"
      CacheNodeType: cache.t2.micro
      NumCacheNodes: 1
      CacheParameterGroupName: "default.redis5.0"
      Port: 6379
      CacheSubnetGroupName: !Ref ElasticacheSubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt 
          - ElasticacheSecurityGroup
          - GroupId

  ElasticacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 6379
        ToPort: 6379
        SourceSecurityGroupId: !Ref InstanceSecurityGroup

  ElasticacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for Checkout
      SubnetIds: !Split [',', !Ref DatabaseSubnetIds]

Outputs:
  Endpoint:
    Description: Service endpoint
    Value: !Sub 'http://${DNSRecord}'