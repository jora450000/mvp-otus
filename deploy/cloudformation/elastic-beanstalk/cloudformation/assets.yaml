AWSTemplateFormatVersion: 2010-09-09
Description: Watchn Assets service Elastic Beanstalk application

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VpcId:
    Description: VPC ID
    Type: 'AWS::EC2::VPC::Id'

  PrivateSubnetIds:
    Description: Private Subnet IDs
    Type: String

  HostedZone:
    Description: Private hosted zone for DNS
    Type: String

  ServiceRoleArn:
    Description: Elastic Beanstalk Service Role ARN
    Type: String

Resources:
  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Sub '${EnvironmentName}-assets'
      Description: Watchn Assets service

  Version:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref Application
      SourceBundle: ../packages/assets.zip

  Environment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref Application
      EnvironmentName: watchn-assets
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: AWS_REGION
          Value: !Ref AWS::Region
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VpcId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Ref PrivateSubnetIds
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !Ref PrivateSubnetIds
        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: internal
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref ServiceRoleArn
      PlatformArn: !Sub arn:aws:elasticbeanstalk:${AWS::Region}::platform/Docker running on 64bit Amazon Linux 2/3.2.0
      VersionLabel: !Ref Version

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Role

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      Path: /

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : !Ref HostedZone
      Name: assets.watchn.local
      ResourceRecords:
      - !GetAtt Environment.EndpointURL
      TTL: '30'
      Type: CNAME

Outputs:
  Endpoint:
    Description: Service endpoint
    Value: !Sub 'http://${DNSRecord}'